color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
#label= subset(., ~FoodGroup=="Meat", select=AggProduction))
addMarkers(lng=51.925, lat=14.235,
popup=~FoodGroup=="Meat"))
shiny::runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
#label= subset(., ~FoodGroup=="Meat", select=AggProduction))
addCircleMarkers(data = merged_2014_shpfile@data,
lat = ~LAT,
lng = ~LON,
popup=~FoodGroup=="Meat"))
###################
#shpfile2_plotly <- st_as_sf(shpfile)
df_dummy <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
#label= subset(., ~FoodGroup=="Meat", select=AggProduction))
addCircleMarkers(data = merged_2014_shpfile@data,
lat = ~LAT,
lng = ~LON))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
#label= subset(., ~FoodGroup=="Meat", select=AggProduction))
addCircleMarkers(lat = ~LAT,
lng = ~LON,
color = "ffffff",
weight = 1,
radius = 5))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
label= subset(., ~FoodGroup=="Meat", select=AggProduction))
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
label= subset(., ~FoodGroup=="Meat", select=AggProduction))
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
label= ~FoodGroup=="Meat")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
label ~FoodGroup =="Meat")
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE) %>%
label=~FoodGroup %in% "Meat")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~FoodGroup %in% "Meat")
###################
#shpfile2_plotly <- st_as_sf(shpfile)
df_dummy <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~AggProduction[FoodGroup %in% "Meat"])
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~AggProduction[FoodGroup == "Meat"])
###################
#shpfile2_plotly <- st_as_sf(shpfile)
df_dummy <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region)
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region) %>%
addMarkers(lng = ~LON,
lat = ~LAT,
popup = ~as.character(AggProduction[FoodGroup == "Meat"]))
merged_2014_shpfile@data %>%
AggProduction[FoodGroup == "Meat"]
merged_2014_shpfile@data[AggProduction[FoodGroup == "Meat"]]
merged_2014_shpfile@data %>%
merged_2014_shpfile@data[AggProduction[FoodGroup == "Meat"]]
subset(merged_2014_shpfile, FoodGroup == "Meat", AggProduction)
View(subset(merged_2014_shpfile, FoodGroup == "Meat", AggProduction))
View(subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction))
###################
#shpfile2_plotly <- st_as_sf(shpfile)
df_dummy <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction))
#### Agrawal. Subset, seems to work
View(subset(merged_2014_shpfile@data, FoodGroup == "Meat", select=c(region, AggProduction)))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~NAME %>%
subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~NAME %>%
subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~NAME %>%
addLegend("bottomright",
values = AggProduction[FoodGroup=="Meat"],
title = "whatever",
opacity = 1))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~NAME %>%
addLegend("bottomright",
pal = pal,
values = AggProduction[FoodGroup=="Meat"],
title = "whatever",
opacity = 1))
mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
#mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
addLegend("bottomright",
pal = pal,
values = AggProduction[FoodGroup=="Meat"],
title = "whatever",
opacity = 1))
pal <- colorBin("YlOrRd", domain = merged_2014_shpfile@data$AggProduction, bins = bins)
#mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
addLegend("bottomright",
pal = pal,
values = AggProduction[FoodGroup=="Meat"],
title = "whatever",
opacity = 1))
#mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
addLegend("bottomright",
pal = pal,
values = subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction),
title = "whatever",
opacity = 1))
pal <- colorBin("YlOrRd", domain = merged_2014_shpfile@data, bins = bins)
#mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
addLegend("bottomright",
pal = pal,
values = subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction),
title = "whatever",
opacity = 1))
#mypalette <- colorBin(palette=c("#8acb88", "#FF9933", "#990033"))
#merged_2014_shpfile. Agrawal.
leaflet(data = merged_2014_shpfile )%>% # haven't merged yet
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillColor = "green",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront=TRUE),
label=~region %>%
addLegend("bottomright",
pal = pal,
values = subset(merged_2014_shpfile@data, FoodGroup == "Meat", AggProduction),
title = "whatever",
opacity = 1))
runApp('SHINY_PROJECT/FoodWaste')
write.csv(shpfile, "~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/shpfile.shp", row.names=FALSE)
shpfile <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/shpfile.shp", stringsAsFactors=FALSE)
View(shpfile)
#Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
shpfile@data$ID <- 1:nrow(shpfile@data)
str(shpfile)
View(shpfile@data)
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
shiny::runApp('SHINY_PROJECT/FoodWaste')
merged_2014_shpfile <- merge(x = shpfile,   # find iso3_2014. Already write.csv
y = iso3_2014,
by.x = "ISO3",
by.y = "CODE",
duplicateGeoms = TRUE)
View(merged_2014_shpfile@data)
shiny::runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
View(merged_agg_allYears_shpfile2@data)
View(wideAgg_allYears)
runApp('SHINY_PROJECT/FoodWaste')
gathered_percentage_stage_allFoodGroups <- rbind(gathered_percentage_cereals, gathered_percentage_dairyandeggs, gathered_percentage_fishandseafood,
gathered_percentage_fruitsandvegetables, gathered_percentage_meat, gathered_percentage_oilseedsandpulses)
write.csv(gathered_percentage_stage_allFoodGroups, "~/Desktop/NYCDSA/SHINY_PROJECT/FoodWaste/gathered_percentage_stage_allFoodGroups.csv")
oilseedsandpulses_bar
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
View(agg_foodgroups_allYears)
runApp('SHINY_PROJECT/FoodWaste')
View(agg_foodgroup_2014_pivot)
runApp('SHINY_PROJECT/FoodWaste')
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3"
geocode("Africa")
#lng = 28.6731, lat = 14.5994
coord_Africa <- c(28.6731, lat = 14.5994)
africa_map <- get_map(location = coord_Africa,
source = "google",
zoom = 3,
maptype = "satellite")
ggmap(africa_map)
wideAgg_allYears <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/wideAgg_allYears.csv", stringsAsFactors=FALSE, na.rm=TRUE)
View(wideAgg_allYears)
na.omit(wideAgg_allYears)
View(wideAgg_allYears)
emissions3_intensities <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/FoodWaste/emissions2_intensities.csv", stringsAsFactors=FALSE)
addresses <- unique(emissions3_intensities$Area)
unique(addresses)
geocodes <- geocode(addresses, source = "google")
View(geocodes)
ggmap(africa_map) +
geom_point(data = geocodes)
library(sf)
chloropleth <- read_sf("~/Desktop/NYCDSA/SHINY_PROJECT/FoodWaste/TM_WORLD_BORDERS-0.3/TM_WORLD_BORDERS-0.3.shp")
map_and_data <- emissions3_intensities %>%
merge(x = emissions3_intensities,
y = chloropleth,
by.x = "Area",
by.y = "NAME",
all = TRUE)
View(map_and_data)
value_chloropleth <- ggplot(map_and_data, aes(geometry=geometry)) +
geom_sf(fill = map_and_data$Value)) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43")
shpfile@data
#Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
View(shpfile)
View(shpfile@data)
wideAgg_allYears <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/wideAgg_allYears.csv", stringsAsFactors=FALSE)
View(wideAgg_allYears)
wideAgg_allYears <- wideAgg_allYears[!is.na(wideAgg_allYears$grpRegion),]
wideAgg_allYears <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/wideAgg_allYears.csv", stringsAsFactors=FALSE)
wideAgg_allYears <- wideAgg_allYears[!is.na(wideAgg_allYears$grpRegion),]
wideAgg_allYears <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/wideAgg_allYears.csv", stringsAsFactors=FALSE)
wideAgg_allYears <- wideAgg_allYears[!is.na(wideAgg_allYears$grpRegion),]
View(wideAgg_allYears)
View(iso3_2014)
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
View(wideAgg_allYears)
# Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
# Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
shpfile@data$ID <- 1:nrow(shpfile@data)
library(rgdal)
# Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
shpfile@data$ID <- 1:nrow(shpfile@data)
View(shpfile@data)
# Plotly for R: another attempted choropleth using plot_geo
# shpfile2_plotly <- st_as_sf(shpfile)
df_dummy <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
View(df_dummy)
View(df_dummy)
#Read in files
shpfile <- readOGR(dsn=getwd(), layer="TM_WORLD_BORDERS_SIMPL-0.3")
shpfile@data$ID <- 1:nrow(shpfile@data)
View(shpfile@data)
wide_df <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/Foodwaste/wide_df.csv")
# Subset by year
wide2014 <- wide_df %>%
filter(., Year == "2014")
library(tidyverse)
wide_df <- wide_df %>%
mutate(., PerCapita_Production = (Production/Population)*907.19) %>%
select(.,region = Area, FoodGroup, Year, PerCapita_Production, PerCapita_FinalSupply = Food.supply.quantity..kg.capita.yr., Population) %>%
filter(., FoodGroup %in% c("Cereals", "Roots and tubers", "Oilseeds and Pulses", "Fruits and Vegetables", "Meat",
"Dairy and Eggs", "Fish and Seafood"))
# Subset by year
wide2014 <- wide_df %>%
filter(., Year == "2014")
dummy2014 <- wide2014 %>%
select(., region, FoodGroup, Year, PerCapita_Production, PerCapita_FinalSupply, Population) %>%
group_by(., region, FoodGroup) %>%
mutate(., Year=Year) %>%
group_by(., region, FoodGroup, Year) %>%
summarise(., AggProduction = sum(PerCapita_Production), AggFinalSupply = sum(PerCapita_FinalSupply ))
View(dummy2014)
View(dummy2014)
View(wide2014)
View(dummy2014)
iso3_2014 <- read.csv("~/Desktop/NYCDSA/SHINY_PROJECT/FoodWaste/iso3_2014.csv", stringsAsFactors=FALSE)
View(iso3_2014)
View(df_dummy)
View(dummy2014)
View(df_dummy)
View(dummy2014)
View(df_dummy)
View(dummy2014)
View(df_dummy)
View(df_dummy)
View(df_dummy)
View(dummy2014)
shpfile@data
View(shpfile@data)
View(dummy2014)
View(df_dummy)
View(iso3_2014)
View(iso3_2014)
View(df_dummy)
View(shpfile@data)
View(iso3_2014)
View(dummy2014)
View(dummy2014)
View(dummy2014)
dummy2014$region <- gsub("China, Mainland", "China", dummy2014$region)
dummy2014
View(dummy2014)
dummy2014$region <- gsub("China, mainland", "China", dummy2014$region)
View(dummy2014)
dummy2014$region <- gsub("United States of America", "United States", dummy2014$region)
View(dummy2014)
dummy2014$region <- gsub("Russian Federation", "Russia", dummy2014$region)
dummy2014$region <- gsub("Bolivia (Plurinational State of)", "Bolivia", dummy2014$region)
shiny::runApp('SHINY_PROJECT/FoodWaste')
shiny::runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste')
runApp('SHINY_PROJECT/FoodWaste/shiny')
